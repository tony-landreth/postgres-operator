[{"metrics":[{"metric_name":"ccp_backrest_last_full_backup_time_since_completion_seconds","value_column":"last_full_backup"}],"sql":"DROP TABLE IF EXISTS pgbackrest_info;\nDROP TABLE IF EXISTS pgbackrest_lines;\nCREATE TEMPORARY TABLE pgbackrest_lines (data text);\nCREATE TEMPORARY TABLE pgbackrest_info (data json);\nCOPY pgbackrest_lines (data)\nFROM PROGRAM 'grep --extended-regexp --no-filename --no-messages --only-matching ''^\\[[^]:]+\\]'' /etc/pgbackrest/*.conf /etc/pgbackrest/conf.d/*.conf ||:'\nWITH (FORMAT csv, HEADER false, DELIMITER ':', QUOTE '\"');\n\n--- Have the operator write these COPYs.\nCOPY pgbackrest_info (data)\nFROM PROGRAM 'export LC_ALL=C \u0026\u0026 printf \"\\f\" \u0026\u0026 pgbackrest info --log-level-console=info --log-level-stderr=warn --output=json --stanza=db \u0026\u0026 printf \"\\f\"'\nWITH (FORMAT csv, HEADER false, QUOTE E'\\f');\n\nWITH\nall_backups (data) AS (\n  SELECT jsonb_array_elements(to_jsonb(data)) FROM pgbackrest_info\n),\nstanza_backups (stanza, backup) AS (\n  SELECT data-\u003e\u003e'name', jsonb_array_elements(data-\u003e'backup') FROM all_backups\n),\nordered_backups (stanza, backup, seq_oldest, seq_newest) AS (\n  SELECT stanza, backup,\n    ROW_NUMBER() OVER (\n      PARTITION BY stanza, backup-\u003e'database'-\u003e\u003e'repo-key', backup-\u003e\u003e'type'\n      ORDER BY backup-\u003e'timestamp'-\u003e\u003e'start' ASC, backup-\u003e'timestamp'-\u003e\u003e'stop' ASC\n    ),\n    ROW_NUMBER() OVER (\n      PARTITION BY stanza, backup-\u003e'database'-\u003e\u003e'repo-key', backup-\u003e\u003e'type'\n      ORDER BY backup-\u003e'timestamp'-\u003e\u003e'start' DESC, backup-\u003e'timestamp'-\u003e\u003e'stop' DESC\n    )\n  FROM stanza_backups\n),\n\nccp_backrest_last_full_backup AS (\n  SELECT\n    stanza,\n    backup-\u003e'database'-\u003e\u003e'repo-key' AS repo,\n    EXTRACT(EPOCH FROM CURRENT_TIMESTAMP)::bigint - max((backup-\u003e'timestamp'-\u003e\u003e'stop')::bigint) AS time_since_completion_seconds\n  FROM ordered_backups\n  WHERE seq_newest = 1 AND backup-\u003e\u003e'type' IN ('full')\n  GROUP BY 1,2\n)\nSELECT\n  ccp_backrest_last_full_backup.time_since_completion_seconds as last_full_backup\nFROM ccp_backrest_last_full_backup;\n"}]
